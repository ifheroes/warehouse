# Verwende das offizielle PHP-Apache-Image
FROM php:8.2-apache

# Installiere notwendige Tools und Abh채ngigkeiten f체r PHP-Erweiterungen
RUN apt-get update && apt-get install -y \
    git \
    jq \
    libcurl4-openssl-dev \
    libonig-dev \
    libzip-dev \
    unzip \
    gettext-base \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Installiere PHP-Erweiterungen 체ber docker-php-ext-install
RUN docker-php-ext-install mysqli curl mbstring

# Setze das Arbeitsverzeichnis
WORKDIR /var/www/html

# Entferne die Standard-Apache index.html Seite
RUN rm -f /var/www/html/index.html

# Kopiere den Website-Code in den Container
COPY /v1/ /var/www/html/

# Kopiere weitere Dateien
COPY ./v1/sec/auth_token.json /var/www/html/v1/sec/auth_token.json

# Setze eine Umgebungsvariable f체r den Port
ARG APACHE_PORT=8081

# Konfiguriere Apache, um auf dem angegebenen Port zu lauschen
RUN sed -i "s/Listen 80/Listen ${APACHE_PORT}/" /etc/apache2/ports.conf && \
    sed -i "s/<VirtualHost \*:80>/<VirtualHost \*:${APACHE_PORT}>/" /etc/apache2/sites-available/000-default.conf

# Konfiguriere PHP, um Fehler in die Apache-Error-Logs zu schreiben
RUN echo "error_reporting = E_ALL" >> /usr/local/etc/php/php.ini \
    && echo "display_errors = Off" >> /usr/local/etc/php/php.ini \
    && echo "log_errors = On" >> /usr/local/etc/php/php.ini \
    && echo "error_log = /proc/self/fd/2" >> /usr/local/etc/php/php.ini

# Exponiere den konfigurierten Port
EXPOSE ${APACHE_PORT}

# Starte Apache im Vordergrund
CMD ["apache2ctl", "-D", "FOREGROUND"]
